create TABLE EMP (
	EMPCODE NUMERIC(3),
	NAME VARCHAR2(10),
	QUALIFICATION VARCHAR2(7), 
	PHONE NUMERIC(10),
	EMAIL VARCHAR2(20),
	DESIGNATION VARCHAR2(20),
	SALARY NUMERIC(7),
	constraint SALARY_RANGE CHECK (SALARY > 97000 AND SALARY < 300000),
	CONSTRAINT PK_EMPNO PRIMARY KEY(EMPCODE),
	CONSTRAINT EMAIL_DOMAIN CHECK(EMAIL LIKE '%@digisol.com'),
	CONSTRAINT VALID_DESIGNATION CHECK (DESIGNATION in 
		('DEVELOPER', 'PROJECT LEADER', 'PROJECT MANAGER', 'TECHNICAL HEAD',
		'PROJECT DIRECTOR', 'CEO')),
	CONSTRAINT VALID_QUALIF CHECK (QUALIFICATION in ('BTECH', 'MTECH', 'MSC', 'MCA', 'PHD'))
	);

CREATE TABLE SKILL (
	SKILLID CHAR(3),
	SKILLNAME VARCHAR(2),
	CONSTRAINT UNQ_SKILLID UNIQUE(SKILLID),
 	CONSTRAINT UNQ_SKILLNAME UNIQUE(SKILLNAME)
	);
	
CREATE TABLE EMP_SKILL (
	EMPNO NUMERIC(3),
	SKILLID CHAR(3),
	SKILL_EXPERIENCE NUMERIC(3) CHECK (SKILL_EXPERIENCE > 0),
	CONSTRAINT FK_EMPNO FOREIGN KEY (EMPNO) REFERENCES EMP(EMPCODE),
	CONSTRAINT FK_SKILLNO FOREIGN KEY (SKILLID) REFERENCES SKILL(SKILLID) ON DELETE CASCADE
	);

CREATE TABLE PRJ_DETAILS (
	PRJID CHAR(3),
	PRJ_NAME VARCHAR2(10),
	START_DATE DATE,
	END_DATE DATE,
	ACTUAL_END_DATE DATE,
	BUDGET_BY_EMPCODE NUMERIC(10,1),
	ACTUAL_BUDGET NUMERIC(10,1),
	CONSTRAINT ACTUAL_DATE_CONSTRAINT CHECK (END_DATE < ACTUAL_END_DATE),
	CONSTRAINT END_DATE_GREATERTHN_START_DATE CHECK (END_DATE > START_DATE),
	CONSTRAINT PK_PRJID PRIMARY KEY(PRJID),
	CONSTRAINT STRTSWITH_P CHECK(PRJID LIKE 'P%')
	);
	
CREATE TABLE CLIENT (
	CLIENTID CHAR(3),
	NAME VARCHAR2(10),
	PHONE CHAR(14),
	CONSTRAINT PK_CLIENTid PRIMARY KEY (CLIENTID),
	CONSTRAINT STRTSWITH_C CHECK(CLIENTID LIKE 'C%'),
	CONSTRAINT VALID_PHONE CHECK (PHONE NOT LIKE '[+][9|8|3|4][1|8|4][-][0-9]{10}')
	);
	
CREATE TABLE WORK_EXP (
	EMPCODE NUMERIC(3) REFERENCES EMP(EMPCODE),
	PRJID REFERENCES PRJ_DETAILS(PRJID),
	WORK_EXPERIENCE NUMERIC(3) NOT NULL CHECK (WORK_EXPERIENCE > 0),
	CLIENTID CHAR(3) REFERENCES CLIENT(CLIENTID) ON DELETE SET NULL,
	RATING CHAR(1),
	CONSTRAINT RATING_CHECK CHECK (RATING in ('B', 'A', 'C'))
	);

CREATE TABLE MEDICAL_POLICY (
	EMPNO NUMERIC(3) REFERENCES EMP(EMPCODE),
	POLICYNO VARCHAR2(6) CHECK (POLICYNO LIKE 'MED%'),
	PREMIUM NUMERIC(5) CHECK (PREMIUM > 0),
	POLICYDATE DATE
	);
	
CREATE TABLE FAMILY_DEPENDENTS (
	EMPNO NUMERIC(3) REFERENCES EMP(EMPCODE),
	DEP_NAME VARCHAR(20) PRIMARY KEY,
	RELATIONSHIP VARCHAR(16),
	AGE NUMERIC(3),
	CONSTRAINT VALID_AGE CHECK (AGE > 1 AND AGE < 130)
	);

CREATE TABLE PAY_CHECK (
	EMPCODE NUMERIC(3) REFERENCES EMP(EMPCODE),
	PAY_DAY DATE PRIMARY KEY,
	REGULAR_INCREMENT NUMERIC(4),
	PERFORMANCE_INCENTIVE NUMERIC(5),
	DA NUMERIC(7),
	PF NUMERIC(6),
	OTHER_INCENTIVES NUMERIC(4),
	ADVANCE_TAX NUMERIC(5),
	CONSTRAINT VALID_REGU_INCENTIVE CHECK (REGULAR_INCREMENT = 2000
										OR REGULAR_INCREMENT = 3000
										OR REGULAR_INCREMENT = 5000
										OR REGULAR_INCREMENT = 7000 
										OR REGULAR_INCREMENT = 9000)
	);

-- Question 1
ALTER TABLE EMP
ADD REPORTS_TO NUMERIC(3)
ADD CONSTRAINT FK_REPORTS_TO_EMPCODE FOREIGN KEY (REPORTS_TO) REFERENCES EMP(EMPCODE);

-- Question 2
ALTER TABLE SKILL
ADD CONSTRAINT STRTSWITH_S CHECK(SKILLID LIKE 'S%');

-- Question 3
ALTER TABLE EMP_SKILL
ADD CONSTRAINT PK_EMPNO_SKILLID PRIMARY KEY(EMPNO, SKILLID);

-- Question 4	
ALTER TABLE PRJ_DETAILS
ADD CONSTRAINT UNQ_PRJ_NAME UNIQUE(PRJ_NAME);

-- Question 5
ALTER TABLE CLIENT
ADD EMAIL VARCHAR2(20)
ADD CONSTRAINT VALID_EMAIL CHECK(EMAIL LIKE '%@%.[a-z]{3}');

-- Question 6
ALTER TABLE EMP
ADD CONSTRAINT UNQ_PHONE UNIQUE(PHONE);

-- Question 7
ALTER TABLE EMP
ADD CONSTRAINT UNQ_EMAIL UNIQUE(EMAIL);

-- Question 8
ALTER TABLE MEDICAL_POLICY
DROP PRIMARY KEY;
ALTER TABLE MEDICAL_POLICY
ADD CONSTRAINT PK_MULTIPLE PRIMARY KEY (EMPNO, POLICYNO, POLICYDATE);

-- Question 9
ALTER TABLE MEDICAL_POLICY
ADD CONSTRAINT VALID_PREMIUM CHECK (PREMIUM > 1000);
